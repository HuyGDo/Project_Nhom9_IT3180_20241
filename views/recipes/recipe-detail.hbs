<script>
    window.isAuthenticated = {{#if user}}true{{else}}false{{/if}};
</script>

<main class="recipe-detail">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                {{!-- Recipe Header --}}
                <div class="recipe-detail__header">
                    <h1 class="recipe-detail__heading">{{ recipe.title }}</h1>
                    <div class="recipe-detail__meta">
                        <a href="/users/{{ recipe.author._id }}" class="recipe-detail__author">
                            {{#if recipe.author.profile_picture}}
                            <img
                                src="{{ recipe.author.profile_picture }}"
                                alt="{{ recipe.author.username }}"
                                class="recipe-detail__author-img"
                            />
                            {{else}}
                            <img
                                src="/assets/img/avatar.jpg"
                                alt="{{ recipe.author.username }}"
                                class="recipe-detail__author-img"
                            />
                            {{/if}}
                            <span
                                >By {{ recipe.author.first_name }}
                                {{ recipe.author.last_name }}</span
                            >
                        </a>
                        <div class="recipe-detail__stats">
                            <span
                                class="recipe-detail__date"
                                >{{ formatDate recipe.createdAt }}</span
                            >
                            <span class="recipe-detail__views">{{ recipe.views }} views</span>
                        </div>
                    </div>
                </div>

                {{!-- Recipe Image --}}
                <div class="recipe-detail__image-wrapper">
                    {{#if recipe.image}}
                    <img
                        src="{{ recipe.image }}"
                        alt="{{ recipe.title }}"
                        class="recipe-detail__image"
                    />
                    {{else}}
                    <img
                        src="/assets/img/recipe-placeholder.jpg"
                        alt="{{ recipe.title }}"
                        class="recipe-detail__image"
                    />
                    {{/if}}
                </div>

                {{!-- Voting Section --}}
                <div class="recipe-detail__actions">
                    <div class="vote-container" data-recipe-id="{{ recipe._id }}">
                        <button
                            class="vote-btn upvote-btn {{#if recipe.userVoted.up}}voted{{/if}}"
                            data-vote="up"
                        >
                            <img src="/assets/icons/thumbs-up.svg" alt="upvote" />
                            <span class="upvote-count">{{ recipe.votes.upvotes }}</span>
                        </button>
                        <button
                            class="vote-btn downvote-btn {{#if recipe.userVoted.down}}voted{{/if}}"
                            data-vote="down"
                        >
                            <img src="/assets/icons/thumbs-down.svg" alt="downvote" />
                            <span class="downvote-count">{{ recipe.votes.downvotes }}</span>
                        </button>
                    </div>
                    <div class="recipe-detail__share">
                        <button class="btn btn--outline">
                            <img src="/assets/icons/share.svg" alt="share" />
                            Share
                        </button>
                    </div>
                </div>

                {{!-- Recipe Description --}}
                <div class="recipe-detail__description">
                    <h2 class="recipe-detail__section-title">Description</h2>
                    <p>{{ recipe.description }}</p>
                </div>

                {{!-- Ingredients Section --}}
                <div class="recipe-detail__ingredients">
                    <h2 class="recipe-detail__section-title">Ingredients</h2>
                    <ul class="recipe-detail__ingredients-list">
                        {{#each recipe.ingredients}}
                        <li class="recipe-detail__ingredient-item">
                            <span class="ingredient-name">{{ this.name }}</span>
                            <span class="ingredient-quantity">{{ this.quantity }}</span>
                        </li>
                        {{/each}}
                    </ul>
                </div>

                {{!-- Instructions Section --}}
                <div class="recipe-detail__instructions">
                    <h3 class="recipe-detail__subtitle">Instructions</h3>
                    <div class="recipe-detail__steps">
                        {{#each recipe.instructions}}
                        <div class="recipe-detail__step">
                            <span class="step-number">{{add @index 1}}</span>
                            <p class="step-description">{{ this.description }}</p>
                        </div>
                        {{/each}}
                    </div>
                </div>
            </div>

            {{!-- Sidebar --}}
            <div class="col-lg-4">
                <div class="recipe-detail__sidebar">
                    <div class="recipe-detail__info-card">
                        <h3>Recipe Info</h3>
                        <div class="info-item">
                            <span class="info-label">Prep Time:</span>
                            <span class="info-value">{{ recipe.prepTime }} mins</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Cook Time:</span>
                            <span class="info-value">{{ recipe.cookTime }} mins</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Servings:</span>
                            <span class="info-value">{{ recipe.servings }}</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

{{!-- Voting Script --}}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const voteContainer = document.querySelector(".vote-container");
        if (!voteContainer) return;

        const recipeId = voteContainer.dataset.recipeId;
        const voteButtons = voteContainer.querySelectorAll(".vote-btn");
        let isVoting = false;

        voteButtons.forEach((button) => {
            button.addEventListener("click", async function (e) {
                e.preventDefault();

                if (!window.isAuthenticated) {
                    alert("Please login to vote");
                    window.location.href = "/sign-in";
                    return;
                }

                if (isVoting) return;

                const voteType = this.dataset.vote;
                isVoting = true;
                this.classList.add("loading");

                try {
                    const response = await fetch(`/recipes/${recipeId}/vote`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ voteType }),
                    });

                    const data = await response.json();

                    if (data.success) {
                        voteContainer.querySelector(".upvote-count").textContent = data.upvotes;
                        voteContainer.querySelector(".downvote-count").textContent = data.downvotes;

                        voteButtons.forEach((btn) => btn.classList.remove("voted"));
                        if (data.userVoted.up) {
                            voteContainer.querySelector(".upvote-btn").classList.add("voted");
                        }
                        if (data.userVoted.down) {
                            voteContainer.querySelector(".downvote-btn").classList.add("voted");
                        }
                    } else {
                        alert(data.message || "Error voting");
                    }
                } catch (error) {
                    console.error("Vote error:", error);
                    alert("Error submitting vote");
                } finally {
                    isVoting = false;
                    this.classList.remove("loading");
                }
            });
        });
    });
</script>
